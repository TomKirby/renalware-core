.med-form.content{:id => "edit-meds-#{pm.object.id}"}
  = pm.hidden_field :id

  = pm.hidden_field :patient_id, value: @patient.id
  
  - if pm.object.treatable_type == "PeritonitisEpisode"
    
    .select-peritonitis-drug
      = pm.label :medicatable_id, "Select Drug (peritonitis drugs only)"
      = pm.collection_select :medicatable_id, Drug.peritonitis, :id, :name, {prompt: "Please select drug used to treat this episode of peritonitis" }, :class => "peritonitis-drug-select"

      = pm.hidden_field :medicatable_type, value: "Drug", :class => "selected-medicatable-type"

  - else 
    
    .medication-type-field
      = pm.label :medication_type, "Medication Type"
      = pm.select :medication_type, drug_select_options(pm.object.medication_type), { :prompt => "Select drug by category/type or use the search option below", include_blank: true }, { :class => "medication-type-select" } 
    
    / Search all drugs
    .standard
      = label_tag :drug_search, "Drug"
      = text_field_tag :drug_search, pm.object.persisted? ? pm.object.medicatable.name : nil, :class => "find_drug", :placeholder => "Search drug by name or type"

      %ul.no-bullet.drug-results

      = pm.hidden_field :medicatable_id, :class => "selected-medicatable-id"
      = pm.hidden_field :medicatable_type, value: "Drug", :class => "selected-medicatable-type"

    / Show only when selecting drugs by category/type.
    .drug-by-select
      = pm.label :drug_select, "Select Drug"
      = pm.collection_select :drug_select, drugs_for(pm.object.medication_type), :id, :name, {}, :class => "drug-select"


  / Same for both
  = pm.label :dose
  = pm.text_field :dose

  = pm.label :medication_route_id, "Route"
  = pm.collection_select :medication_route_id, MedicationRoute.all, :id, :name, { :prompt => "Please select route of administration" }, :class => "medication-route-select"
  
  = pm.label :frequency, "Frequency & Duration"
  = pm.text_field :frequency

  = pm.label :notes
  = pm.text_area :notes, :cols => 50, :rows => 6

  = pm.label :date, "Prescribed On"
  = pm.date_select(:date, {start_year: (120.years.ago).year, end_year: Time.now.year, order: [:day, :month, :year]}, class: "datetime")

  = pm.label :provider

  - Medication.providers.keys.map do |p|
    %ul.no-bullet.provider

      %li
        = pm.radio_button :provider, p, :class => "provider-#{p}"
      %li
        = pm.label :provider, I18n.t("enums.provider.#{p}")
