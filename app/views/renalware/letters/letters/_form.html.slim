ruby:
  back_path = patient_letters_letters_path(@patient)

.row.top
  .medium-6.columns
    = f.button :submit
    span= " or "
    = link_to "cancel", back_path

.form-content
  = render f.object.event if f.object.event.present?

  article
    header
      h2 Header

    = f.association :letterhead
    = f.input :description,
              input_html: { \
                data: { \
                  autocomplete_source: search_letters_descriptions_path,
                  autocomplete_rel: "[name='letters[description]']" \
                },
                placeholder: "Start entering the description (min. 2 characters)",
                spellcheck: false,
                class: "clear-autocomplete" \
              }
    = hidden_field_tag "description_id"
    = f.input :clinical, as: :hidden
    = f.input :issued_on, as: :date_picker
    = f.association :author, as: :user_picker, collection: Renalware::User.ordered

  = render "main_recipient", f: f, contacts: contacts
  = render "additional_ccs", f: f, contacts: contacts

  article
    header
      h2 Message

    = f.input :salutation
    = snippets_modal_and_link_to_open_it(target_input_for_seleted_snippet: "#letter_body")
    = f.label :body
    = f.text_area :body, rows: 25, class: "letter-body"

  article
    header
      h2 Admin
    = f.input :notes, as: :text, input_html: { rows: 4 }
    = f.input :enclosures

.row.bottom
  .large-12.columns
    = f.button :submit
    span= " or "
    = link_to "cancel", back_path
