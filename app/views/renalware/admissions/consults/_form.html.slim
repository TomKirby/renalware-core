= content_for(:javascript)
  javascript:
    $(document).ready(function() {
      function replaceOptionsInWardDropdown(data) {
        var $select = $('#admissions_consult_hospital_ward_id');
        $select.html("<option />");
        $.each(data, function(index, hash) {
          $select.append($('<option />', { value: hash["id"], text: hash["name"] }));
        });
      };

      $(document).on('change', '#admissions_consult_hospital_unit_id', function(evt) {
        var wardsUrl = $("option:selected", this).data("wards-url");
        var jqxhr = $.getJSON(wardsUrl)
          .done(function(data) {
            replaceOptionsInWardDropdown(data);
          })
          .fail(function(error, a, b) {
            console.log( "error", a, b);
          })
      });
    });


= render "renalware/shared/errors", model: consult
= simple_form_for(consult,
                  html: { autocomplete: "off"},
                  wrapper: :horizontal_form) do |f|

  - if consult.persisted?
    h5= consult.patient.to_s(:long)
  - else
    = f.input :patient_id,
              collection: [],
              wrapper: :horizontal_medium,
              input_html: {\
                class: "patient-id-select2 patient-ajax-search",
                data: { "ajax--url" => search_patients_path(format: :json),
                        placeholder: "Search by patient name or hospital/NHS no." }\
              }

  ruby:
    unit_options = Renalware::Hospitals::Unit.select(:id, :unit_code).all.map do |unit|
      [unit.unit_code, unit.id, {'data-wards-url'=> hospitals_unit_wards_url(unit, format: :json)}]
    end

  / Here we wrap a traditional rails select in a simple form input so we can use
  / a options array containing a custom data attribute on each option e.g.
  / <option data-wards-url="http://local...hospitals/units/1/wards.json" value="1">MOUNT</option>
  / https://stackoverflow.com/questions/10974304/rails-simple-form-custom-association-select-field
  / Note we use the data-wards-url for refreshing the wards dropdown when the unit changes. See JS.
  = f.input(:hospital_unit_id) do
    = f.select(:hospital_unit_id, unit_options)

  =f.association :hospital_ward, collection: consult.hospital_unit&.wards, wrapper: :horizontal_medium
  =f.input :consult_on, as: :date_picker, wrapper: :horizontal_datepicker
  =f.input :decided_on, as: :date_picker, wrapper: :horizontal_datepicker
  =f.input :transfer_on, as: :date_picker, wrapper: :horizontal_datepicker
  =f.input :seen_by, wrapper: :horizontal_medium
  =f.input :aki_risk, include_blank: "Please select", wrapper: :horizontal_small
  =f.input :transfer_priority, include_blank: false, wrapper: :horizontal_small
  =f.input :requires_aki_nurse, as: :inline_radio_buttons
  =f.input :description, wrapper: :horizontal_large, input_html: { rows: 5 }

  = f.submit class: :button
  span= " or "
  =link_to "Cancel", admissions_consults_path
