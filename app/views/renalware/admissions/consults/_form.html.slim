= content_for(:javascript)
  javascript:
    $(document).ready(function() {
      function replaceOptionsInWardDropdown(data) {
        var $select = $('#admissions_consult_hospital_ward_id');
        $select.html("<option />");
        if (data != undefined) {
          $.each(data, function(index, hash) {
            $select.append($('<option />', { value: hash["id"], text: hash["name"] }));
          });
        }
      };

      $(document).on('change', '#admissions_consult_hospital_unit_id', function(evt) {
        var wardsUrl = $("option:selected", this).data("wards-url");
        if (wardsUrl == undefined) {
          replaceOptionsInWardDropdown(undefined);
        } else {
          var jqxhr = $.getJSON(wardsUrl)
            .done(function(data) {
              replaceOptionsInWardDropdown(data);
            })
            .fail(function(error, a, b) {
              console.log( "error", a, b);
            })
        }
        return true;
      })
    });

= render "renalware/shared/errors", model: consult
= simple_form_for(consult,
                  html: { autocomplete: "off" },
                  wrapper: :horizontal_form) do |f|

  / Note the shenanigans to get the select2 to redisplay the patient after a validation error
  / or on an edit. Selected: 1 means just select the option at index 1 - option at index 0 is always
  / the  blank option. Selecting index 1 fails silently if there is nothing there (no patient
  / selected yet) otherwise it will display the selected patient who will always be
  / at option index 1.
  = f.input :patient_id,
            wrapper: :horizontal_medium,
            collection: [[consult.patient&.to_s, consult.patient&.id]],
            selected: 1,
            input_html: {\
              class: "patient-id-select2 patient-ajax-search",
              data: { "ajax--url" => search_patients_path(format: :json),
                      placeholder: "Search by patient name or hospital/NHS no." }\
            }

  = f.input :consult_site_id,
            collection: Renalware::Admissions::ConsultSite.all,
            include_blank: true,
            wrapper: :horizontal_medium

  = f.association :hospital_ward,
                  as: :grouped_select,
                  group_method: :wards,
                  collection: Renalware::Hospitals::Unit.includes(:wards),
                  label_method: ->(s){ "#{s.to_s} (#{s.hospital_unit.unit_code})" },
                  wrapper: :horizontal_medium,
                  include_blank: "Other ward (please enter below)"
                  /input_html: {
                  /  class: "searchable_select",
                  /  data: { tags: true,
                  /          placeholder: "Choose a ward or type another location" }}

  = f.input :other_ward
  = f.input :started_on, as: :date_picker, wrapper: :horizontal_datepicker
  = f.input :consult_type, wrapper: :horizontal_medium
  = f.input :decided_on, as: :date_picker, wrapper: :horizontal_datepicker
  = f.input :transfer_priority, include_blank: false, wrapper: :horizontal_small
  = f.input :transferred_on, as: :date_picker, wrapper: :horizontal_datepicker
  = f.association :seen_by,
                  as: :user_picker,
                  collection: Renalware::User.ordered,
                  wrapper: :horizontal_medium
  = f.input :contact_number, wrapper: :horizontal_medium

  = f.input :aki_risk, include_blank: "Please select", wrapper: :horizontal_small
  = f.input :requires_aki_nurse, as: :inline_radio_buttons, wrapper: :horizontal_small
  = f.input :description, wrapper: :horizontal_large, input_html: { rows: 5 }

  = f.submit class: :button
  span= " or "
  = link_to "Cancel", admissions_consults_path
