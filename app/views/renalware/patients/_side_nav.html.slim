- summary = current_patient.summary
ul.side-nav
  li.heading= t(".heading")
  li.link= link_to t(".clinical_summary"), patient_clinical_summary_path(current_patient)
  li.link= link_to t(".demographics"), patient_path(current_patient)
  li.link= link_to t(".contacts"), patient_letters_contacts_path(current_patient)
  li.link= link_to t(".clinical_profile"), patient_clinical_profile_path(current_patient)
  li.link= link_to t(".esrf"), edit_patient_renal_profile_path(current_patient)
  li.link= link_to t(".modalities", count: summary.modalities_count), patient_modalities_path(current_patient)
  li.link= link_to t(".problems", count: summary.problems_count), patient_problems_path(current_patient)
  li.link= link_to t(".pathology", count: summary.observation_requests_count), patient_pathology_historical_observations_path(current_patient)
  li.link= link_to t(".prescriptions", count: summary.prescriptions_count), patient_prescriptions_path(current_patient)
  li.link= link_to t(".events", count: summary.events_count), patient_events_path(current_patient)
  li.link= link_to t(".clinic_visits", count: summary.clinic_visits_count), patient_clinic_visits_path(current_patient)
  li.link= link_to t(".letters", count: summary.letters_count), patient_letters_letters_path(current_patient)
  li.link= link_to t(".access_profiles", count: summary.access_profiles_count), patient_accesses_dashboard_path(current_patient)
  li.divider
  li.heading= t(".regimes")
  li.link= link_to_if display_pd_menu?(current_patient), t(".pd"), patient_pd_dashboard_path(current_patient)
  li.link= link_to_if display_hd_menu?(current_patient), t(".hd"), patient_hd_dashboard_path(current_patient)
  li.divider
  li.heading= t(".transplants")
  - if Renalware::Transplants.cast_patient(current_patient).donor?
    li.link= link_to t(".donor_summary"), patient_transplants_donor_dashboard_path(current_patient)
  - else
    li.link= link_to t(".recipient_summary"), patient_transplants_recipient_dashboard_path(current_patient)
  li.divider
  li.heading= t(".options")
  - bookmark = find_user_bookmark_for_patient(current_patient)

  - if bookmark.present?
    li.link= render partial: "renalware/patients/bookmarks/delete",
                    locals: { bookmark: bookmark, link_text: t(".delete_bookmark") }
  - else
    li.link= render partial: "renalware/patients/bookmarks/new",
                    locals: { patient: current_patient, link_text: t(".create_bookmark") }
