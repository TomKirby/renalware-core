ruby:
  back_path = if f.object.new_record?
    patient_transplants_donor_dashboard_path(@patient)
  else
    patient_transplants_donation_path(@patient, f.object)
  end

.row.top
  .medium-6.columns
    = f.submit "Save", class: "button"
    span= " or "
    = link_to "cancel", back_path

.form-content
  = render layout: "renalware/shared/fieldset",
      locals: { legend: "Recipient", name: "recipient" } do
    = f.input :relationship_with_recipient
    = f.input :relationship_with_recipient_other
    .row
      .small-3.columns
        = label_tag f.object.class.human_attribute_name(:recipient),
            nil, class: "right inline"
      .small-9.columns
        = text_field_tag 'recipient_auto_complete', \
            f.object.recipient.try(:to_s, :long),
            data: { \
              autocomplete_source: search_patients_path, \
              autocomplete_rel: "#transplants_donation_recipient_id" \
            },
            placeholder: "Start entering the last name (min. 2 characters)"
    = f.input :recipient_id, as: :hidden
    = f.input :blood_group_compatibility, as: :inline_radio_buttons
    = f.input :mismatch_grade, input_html: { class: "small-input" }
    = f.input :paired_pooled_donation

  = render layout: "renalware/shared/fieldset",
      locals: { legend: "Admin", name: "admin" } do
    = f.input :state, input_html: { class: "small-input" }
    = f.input :volunteered_on, as: :date_picker
    = f.input :first_seen_on, as: :date_picker
    = f.input :workup_completed_on, as: :date_picker
    = f.input :donated_on, as: :date_picker
    = f.input :notes, input_html: { rows: 5 }

.row
  .large-12.columns
    = f.submit 'Save', class: 'button'
    span= " or "
    = link_to 'cancel', back_path
